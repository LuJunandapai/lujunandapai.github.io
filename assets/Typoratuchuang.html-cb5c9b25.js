import{_ as p,p as o,q as i,s as n,R as a,t as e,Y as t,n as c}from"./framework-e1bed10d.js";const l={},r=n("h1",{id:"typora",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typora","aria-hidden":"true"},"#"),a(" Typora")],-1),u=n("h2",{id:"下载地址",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载地址","aria-hidden":"true"},"#"),a(" 下载地址")],-1),d={href:"https://github.com/Molunerfinn/PicGo",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.aliyundrive.com/s/GcirPkq1qzR",target:"_blank",rel:"noopener noreferrer"},m=n("h2",{id:"typora-设置-阿里云-作为图床",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typora-设置-阿里云-作为图床","aria-hidden":"true"},"#"),a(" Typora 设置 阿里云 作为图床")],-1),g=n("h3",{id:"防坑点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#防坑点","aria-hidden":"true"},"#"),a(" 防坑点")],-1),h={href:"https://blog.csdn.net/muxuen/article/details/122441469",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,"网速快 但是访问超出一定量需要收费",-1),b=n("h2",{id:"typora-设置-githube-作为图床",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typora-设置-githube-作为图床","aria-hidden":"true"},"#"),a(" Typora 设置 Githube 作为图床")],-1),_=n("h3",{id:"防坑点-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#防坑点-1","aria-hidden":"true"},"#"),a(" 防坑点")],-1),y={href:"https://blog.csdn.net/qq_49488584/article/details/121528675",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,"Githube 在国内网速较慢 有时候会抽风",-1),f=n("li",null,"部署网页可能加载不出来 需要科学上网",-1),E=t(`<h3 id="在设置-获取-token" tabindex="-1"><a class="header-anchor" href="#在设置-获取-token" aria-hidden="true">#</a> 在设置 获取 Token</h3><p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/MD_imagesimage-20230509155028714.png" alt="image-20230509155028714"></p><h3 id="创建仓库" tabindex="-1"><a class="header-anchor" href="#创建仓库" aria-hidden="true">#</a> 创建仓库</h3><p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/MD_imagesMD_imagesimage-20230509154908143.png" alt="image-20230509154908143"></p><h3 id="配置-picgo-设置" tabindex="-1"><a class="header-anchor" href="#配置-picgo-设置" aria-hidden="true">#</a> 配置 PicGo 设置</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>设定仓库名<span class="token operator">:</span> <span class="token punctuation">[</span>github用户名<span class="token punctuation">]</span><span class="token operator">/</span><span class="token punctuation">[</span>新建的仓库名称<span class="token punctuation">]</span>
设定分支名<span class="token operator">:</span> <span class="token function">main</span><span class="token punctuation">(</span>默认<span class="token punctuation">,</span> 可指定<span class="token punctuation">)</span>
设定<span class="token class-name">Token</span><span class="token operator">:</span> token获取的
设定存储路径<span class="token operator">:</span> image<span class="token operator">/</span> 可填可不填，如果填写了，图片就会存储在img文件夹下
设定自定义域名<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span><span class="token punctuation">[</span>github用户名<span class="token punctuation">]</span><span class="token operator">/</span><span class="token punctuation">[</span>仓库名<span class="token punctuation">]</span><span class="token annotation punctuation">@main</span>
设定自定义域名<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>raw<span class="token punctuation">.</span>githubusercontent<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token punctuation">[</span>github用户名<span class="token punctuation">]</span><span class="token operator">/</span><span class="token punctuation">[</span>仓库名<span class="token punctuation">]</span><span class="token operator">/</span>main
<span class="token comment">// 注意: </span>
<span class="token comment">// 1.此处的分支一定要填写@main，否则默认使用master分支。而现在github创建的默认分支名为main，如果不指定，则会出现图片不能上传的情况。</span>
<span class="token comment">// 2.遇到上传失败可以换域名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/MD_imagesimage-20230509154636289.png" alt="image-20230509154636289"></p><h2 id="cdn-加速-jsdelivr" tabindex="-1"><a class="header-anchor" href="#cdn-加速-jsdelivr" aria-hidden="true">#</a> CDN 加速(jsDelivr)</h2><p>从上一步可以看到 GitHub 存储的图片地址是 <code>https://raw.githubusercontent.com</code> 开头的网址，这个域名在某些地方可能打不开或者很慢导致图片加载失败，所以我们需要对图片配置 CDN 加速。</p>`,9),D={href:"https://www.jianshu.com/p/1dae6e1680ff",target:"_blank",rel:"noopener noreferrer"},G=n("p",null,"既然要搭建这么多服务器，服务肯定是要收费的吧。在这个互联网时代，还真有免费 CDN —— jsDelivr CDN，不仅开源免费而且在中国大陆建有许多服务站点，官网还声称是中国大陆唯一拥有许可证的公有 CDN，所以速度、稳定性都可以放心了。",-1),A={href:"https://www.jsdelivr.com/",target:"_blank",rel:"noopener noreferrer"},j=t('<p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/My-PicGo/image-20210112225345331.png" alt="image-20210112225345331"></p><p>在浏览器输入<code>https://cdn.jsdelivr.net/gh/用户名/仓库名/</code>，(注意最后的<code>/</code>不要丢)，可以打开我们在 GitHub 上创建的仓库的文件列表，说明我们在 Github 上创建的仓库已经默认被 jsDelivr 缓存了。</p><p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/My-PicGo/image-20210112232127381.png" alt="image-20210112232127381"></p><p>所以只要把资源链接中的前面部分更改一下就可以使用 CDN 加速了。</p><p>例如，</p><p><strong>原始图片地址的格式</strong>为<code>https://raw.githubusercontent.com/用户名/仓库名/分支名/目录/图片名.png</code>，<code>https://raw.githubusercontent.com/yushuaige/myblog/master/img/image-20201219114500183.png</code>，</p><p><strong>更改后的图片地址的格式</strong><code>https://cdn.jsdelivr.net/gh/用户名/仓库名@分支名/目录/图片名.png</code>，</p><p><code>https://cdn.jsdelivr.net/gh/yushuaige/myblog@master/img/image-20201219114500183.png</code>。</p><p>可以分别打开一下两个图片网址感受一下速度区别。</p><p><strong>PicGo 中需要改一下自定义域名</strong>，之后上传图片自动生成的链接就是 jsDelivr 的链接了。具体就是在<code>设定自定义域名</code>填写<code>https://cdn.jsdelivr.net/gh/用户名/仓库名@master</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/My-PicGo/image-20210112232746338.png" alt="image-20210112232746338"></p><h2 id="typora-配置" tabindex="-1"><a class="header-anchor" href="#typora-配置" aria-hidden="true">#</a> Typora 配置</h2><p>打开<code>文件</code>，<code>偏好设置</code>，<code>图像</code>，选择插入图片时<code>上传图片</code>，勾选图中三个选项，上传服务设定选择<code>PicGo (app)</code>，PicGo 路径通过后面的文件夹选择自己电脑上 PicGo 的安装路径。</p><p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/My-PicGo/image-20210112233235226.png" alt="image-20210112233235226"></p><p>此时，使用 Typora 编辑文件，拖入或者粘贴图片时，会自动调用 PicGo 将图片上传到我们的 GitHub 图床，并把返回的图片链接粘贴到文章中，快去试试吧。</p><h2 id="自动-giteepages-部署" tabindex="-1"><a class="header-anchor" href="#自动-giteepages-部署" aria-hidden="true">#</a> 自动 GiteePages 部署</h2><blockquote><p>原理就是利用 pyppeteer 模拟用户登录，到部署页面模拟点击<code>更新</code>按钮</p></blockquote><h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>',18),x={href:"https://yushuaigee.gitee.io/2021/01/24/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2(%E5%85%AD)%E2%80%94%E2%80%94%E4%B8%89%E4%B8%AA%E7%AB%99%E7%82%B9%E4%B8%80%E9%94%AE%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/",target:"_blank",rel:"noopener noreferrer"},P=t(`<p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/My-PicGo/image-20210113233250172.png" alt="image-20210113233250172"></p><p><img src="https://cdn.jsdelivr.net/gh/LuJunandapai/ApaiImage@main/My-PicGo/image-20210113233443911.png" alt="image-20210113233443911"></p><p><strong>start.bat 源码</strong></p><div class="language-bat line-numbers-mode" data-ext="bat"><pre class="language-bat"><code>COPY:: start.bat 源码
:: python路径 + 空格 + 脚本路径
C:\\Python\\Scripts\\python.exe D:/scripts/post_my_blog.py
pause
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>post_my_blog.py 源码</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>COPY<span class="token comment"># post_my_blog.py 源码</span>
<span class="token comment"># 注意: 更改25、36、52行的用户名密码为自己的Gitee的用户名密码，第45行的仓库名为图床仓库的名字</span>
<span class="token comment"># 每处延时都有用，是我花了好长时间调试过的</span>

<span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> os

<span class="token keyword">from</span> pyppeteer <span class="token keyword">import</span> launch


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">_update_gitee_pages</span><span class="token punctuation">(</span>usr_name<span class="token punctuation">,</span> repo_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
	browser <span class="token operator">=</span> <span class="token keyword">await</span> launch<span class="token punctuation">(</span>devtools<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dumpio<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoClose<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                           args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;--start-maximized&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 设置浏览器全屏</span>
                                 <span class="token string">&#39;--no-sandbox&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 取消沙盒模式，沙盒模式下权限太小</span>
                                 <span class="token string">&#39;--disable-infobars&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 关闭受控制提示</span>
                                 <span class="token comment"># 设置ua</span>
                                 <span class="token string">&#39;--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3542.0 Safari/537.36&#39;</span>
                                 <span class="token punctuation">]</span><span class="token punctuation">,</span>
                           userDataDir<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span><span class="token string">&#39;./cookies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>newPage<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 登录</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&#39;https://gitee.com/login&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>waitFor<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">&#39;登录&#39;</span> <span class="token keyword">in</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&#39;#user_login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&#39;#user_password&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span>keyboard<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&#39;Enter&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;使用账号密码登录成功...&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span>waitFor<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;使用cookies缓存登录成功...&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 更新</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&#39;https://gitee.com/%s/%s/pages&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>usr_name<span class="token punctuation">,</span> repo_name<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>waitFor<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&#39;dialog&#39;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> dialog<span class="token punctuation">:</span> asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>_handle_dialog<span class="token punctuation">(</span>page<span class="token punctuation">,</span> dialog<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&#39;#pages-branch &gt; div.button.orange.redeploy-button.ui.update_deploy&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>waitFor<span class="token punctuation">(</span><span class="token number">20000</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;更新 Gitee Pages %s 成功...&#39;</span> <span class="token operator">%</span> repo_name<span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">_handle_dialog</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> dialog<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>waitFor<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;点击确定更新&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> dialog<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">update_gitee_pages</span><span class="token punctuation">(</span>usr_name<span class="token punctuation">,</span> repo_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>_update_gitee_pages<span class="token punctuation">(</span>usr_name<span class="token punctuation">,</span> repo_name<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    update_gitee_pages<span class="token punctuation">(</span><span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;仓库名&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function B(C,N){const s=c("ExternalLinkIcon");return o(),i("div",null,[r,u,n("p",null,[a("PicGo: "),n("a",d,[a("Github下载地址 "),e(s)])]),n("p",null,[a("Typora: "),n("a",k,[a("我的云盘下载地址"),e(s)])]),m,g,n("ul",null,[n("li",null,[a("Typora 设置 阿里云 oss对象存储 作为云盘: "),n("a",h,[a("参考地址"),e(s)])]),v]),b,_,n("ul",null,[n("li",null,[n("a",y,[a("参考 CSDN 路径"),e(s)])]),w,f]),E,n("p",null,[a("CDN的全称是(Content Delivery Network)，即内容分发网络。其目的是通过在现有的Internet中增加一层新的CACHE(缓存)层，将网站的内容发布到最接近用户的网络”边缘“的节点，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。具体原理见"),n("a",D,[a("CDN加速原理"),e(s)]),a("。通俗来讲，就是 CDN 服务商在全球各个地方建立服务器把要加速的站点进行缓存备份，当你访问站点时实际上是从离你最近的服务器访问缓存，速度自然就快了。")]),G,n("p",null,[a("打开"),n("a",A,[a("jsDelivr CDN 官网"),e(s)]),a("，可以看到 jsDelivr 支持 npm、GitHub、WordPress三个站点的加速，用于我们的GitHub图床是再适合不过了。")]),j,n("ul",null,[n("li",null,[n("a",x,[a("自动 GiteePages 部署 参考地址"),e(s)])])]),P])}const M=p(l,[["render",B],["__file","Typoratuchuang.html.vue"]]);export{M as default};
